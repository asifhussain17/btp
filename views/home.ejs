<%- include("partials/header.ejs") %>

<div class="mohenjo">
<p class="text-3xl font-bold text-center text-gray-800 mt10">Device Tracker</p>
<p class="text-1xl text-center text-gray-800">Click User you want to track:</p>
<div id="user-list"></div>
</div>

<div id="map" ></div>



<script src="/socket.io/socket.io.js"></script>
<script src="https://api.mapbox.com/mapbox-gl-js/v2.10.0/mapbox-gl.js"></script>

<script>
    const socket = io();
    
    
    const user_id = parseInt("<%= user_id %>", 10);
    const user_name = "<%= user_name %>";
    /*console.log(user_id);
    console.log(user_name);*/
    mapboxgl.accessToken = "pk.eyJ1IjoiYXNpZi1odXNzYWluIiwiYSI6ImNtMjY2ZmJ6eDB3aTkycXM2d20xaHkyejAifQ.nz0LlBWzsOfGpGTKqTyJgQ";
        const map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v11',
            //style: 'mapbox://styles/mapbox/satellite-streets-v11',
            center: [74.84944,32.693625],
            zoom: 9
        });

        const marker = new mapboxgl.Marker({ color: 'red' }).setLngLat([0,0]).addTo(map);
        marker.getElement().style.display = 'none';


    if ("geolocation" in navigator) {
    // Function to get and send location
    function sendLocation() {
        /*console.log(user_name);
        console.log(user_id);*/
        navigator.geolocation.watchPosition(
            position => {
                const { latitude, longitude } = position.coords;
                // Send the geolocation to the server
                socket.emit('deviceLocation', { latitude, longitude, user_id, user_name});
                
            },
            error => {
                console.error("Error getting location: ", error);
            },
            {
                enableHighAccuracy: true, // High accuracy for better precision
                timeout: 5000,           // Max wait time 10 seconds
                maximumAge: 0             // Always get fresh location
            }
        );
    }
    // Send location initially
    sendLocation();
} else {
    alert("Geolocation is not supported by your browser.");
}

    var user_location={};
    let selectedUserId = null;
    const userListDiv = document.getElementById("user-list");

    socket.on('location', ({latitude, longitude,user_id, user}) =>{
        console.log(`Latitude: ${latitude}`);
        console.log(`Longitude: ${longitude}`);
        console.log(`user_id: ${user_id}`);
        console.log(`user_name: ${user}`);
        
        console.log(user_location.hasOwnProperty(user_id));
        if (!user_location.hasOwnProperty(user_id)) {
            const userButton = document.createElement("button");
            userButton.innerText = user;
            userButton.id = user_id;
            // Append the button to the user list div
            userListDiv.appendChild(userButton);
        }

        user_location[user_id]={latitude: latitude, longitude: longitude, user : user};

        if (selectedUserId == user_id) {
        console.log(latitude);
        console.log(longitude);
        marker.setLngLat([longitude, latitude]);
        map.setCenter([longitude, latitude]);
        }

    });

  
const userListDi = document.getElementById('user-list');
userListDi.addEventListener('click', function(event) {
    if (event.target && event.target.nodeName === 'BUTTON') {
        selectedUserId = event.target.id;
        console.log(selectedUserId);
        const user = user_location[selectedUserId];
        if (user) {
            marker.setLngLat([user.longitude, user.latitude]);
            marker.getElement().style.display = 'block';
            map.setCenter([user.longitude, user.latitude]);
        }
    }
});

    console.log(user_location);
</script>

<%- include("partials/footer.ejs")  %>