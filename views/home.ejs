<!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://api.mapbox.com/mapbox-gl-js/v2.10.0/mapbox-gl.css" rel="stylesheet">
    <title>Device tracker</title>

    <style>
        #map {
            width: 100%;
            height: 500px; /* Adjust as needed */
        }
    </style>

</head>
<body>
-->

<%- include("partials/header.ejs") %>

<div class="mohenjo">
<p class="text-3xl font-bold text-center text-gray-800 mt10">Device Tracker</p>
<p class="text-1xl text-center text-gray-800">Click User you want to track:</p>
<div id="user-list"></div>
</div>

<div id="map" ></div>



<script src="/socket.io/socket.io.js"></script>
<script src="https://api.mapbox.com/mapbox-gl-js/v2.10.0/mapbox-gl.js"></script>

<script>
    const socket = io();
    
    
    const user_id = parseInt("<%= user_id %>", 10);
    const user_name = "<%= user_name %>";
    /*console.log(user_id);
    console.log(user_name);*/
    mapboxgl.accessToken = "pk.eyJ1IjoiYXNpZi1odXNzYWluIiwiYSI6ImNtMjY2ZmJ6eDB3aTkycXM2d20xaHkyejAifQ.nz0LlBWzsOfGpGTKqTyJgQ";
        const map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v11',
            //style: 'mapbox://styles/mapbox/satellite-streets-v11',
            center: [0, 0],
            zoom: 9
        });

        const marker = new mapboxgl.Marker({ color: 'red' }).setLngLat([0,0]).addTo(map);
        marker.getElement().style.display = 'none';


    if ("geolocation" in navigator) {
    // Function to get and send location
    function sendLocation() {
        /*console.log(user_name);
        console.log(user_id);*/
        navigator.geolocation.watchPosition(
            position => {
                const { latitude, longitude } = position.coords;
                // Send the geolocation to the server
                socket.emit('deviceLocation', { latitude, longitude, user_id, user_name});
                
            },
            error => {
                console.error("Error getting location: ", error);
            },
            {
                enableHighAccuracy: true, // High accuracy for better precision
                timeout: 5000,           // Max wait time 10 seconds
                maximumAge: 0             // Always get fresh location
            }
        );
    }
    // Send location initially
    sendLocation();
} else {
    alert("Geolocation is not supported by your browser.");
}

    
    /*socket.on('location', ({latitude, longitude,user_id, user_name}) =>{
        /*console.log(`Latitude: ${latitude}`);
        console.log(`Longitude: ${longitude}`);
        console.log(`user_id: ${user_id}`);
        console.log(`user_name: ${user_name}`);
        marker.setLngLat([longitude, latitude]);
        marker.getElement().style.display = 'block';
        map.setCenter([longitude, latitude]);
    });*/



    var user_location={};
    socket.on('online_users', (users) =>{
        //console.log(users);
        const userListDiv = document.getElementById("user-list");
        userListDiv.innerHTML = "";
        Object.entries(users).forEach(([id, user]) => {
            user_location[id] = { latitude: user.latitude, longitude: user.longitude };
            const userButton = document.createElement("button");
            userButton.innerText = user.user_name;
            userButton.id = id;
            // Append the button to the user list div
            userListDiv.appendChild(userButton);
        });
    });





    /*
    let currentIntervalId = null;
    const userListDi = document.getElementById('user-list');
  // Add a click event listener to the parent div
    userListDi.addEventListener('click', function(event) {
    // Check if the clicked element is a button
    if (event.target && event.target.nodeName === 'BUTTON') {
        const buttonId = event.target.id;
        if (currentIntervalId) {
            clearInterval(currentIntervalId);
            currentIntervalId = null;
        }

    currentIntervalId = setInterval(()=>{ 
    marker.setLngLat([user_location[buttonId].longitude, user_location[buttonId].latitude]);
    marker.getElement().style.display = 'block';
    map.setCenter([user_location[buttonId].longitude, user_location[buttonId].latitude]);
    },1000)
      
}
  });*/

  let selectedUserId = null;
  const userListDi = document.getElementById('user-list');
userListDi.addEventListener('click', function(event) {
    if (event.target && event.target.nodeName === 'BUTTON') {
        selectedUserId = event.target.id;
        console.log(selectedUserId);
        const user = user_location[selectedUserId];
        if (user) {
            marker.setLngLat([user.longitude, user.latitude]);
            marker.getElement().style.display = 'block';
            map.setCenter([user.longitude, user.latitude]);
        }
    }
});

socket.on('online_users', (users) => {
    if (selectedUserId && users[selectedUserId]) {
        const user = users[selectedUserId];
        console.log(user.latitude);
        console.log(user.longitude);
        marker.setLngLat([user.longitude, user.latitude]);
        map.setCenter([user.longitude, user.latitude]);
    }
});


    console.log(user_location);
</script>

<%- include("partials/footer.ejs")  %>